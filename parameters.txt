= human_sim :
	= human_model :
		- ratio_perturbation : perturbate cmd_vel 0.2 <=> +/- 20% of cmd_vel value

		= behaviors:
			= RANDOM
				- chance_decide_new_goal
				- delay_think_about_new_goal
				(chance_decide_new_goal% chance every delay_think_about_new_goal)

			= STOP_LOOK
				- dist_near_robot : start looking at robot stopping its goal
				- duration_stopped : duration look at robot before go back to goal

			= HARASS
				- dist_in_front : distance in front of robot as goal => harass
				- delay harass replan 

	= supervisor :
		- dur_replan : frequency to replan global path
		- dur_replan_blocked : frequency try to replan global path when blocked
		- dur_check_pose_blocked : if spend this duration not moving while executing plan => concider blocked (local planner)
		- nb_replan_success_to_unblock : when blocked number of concecutive times required successfully getting a "good global path" to unblock
			= "good global path" (or)
				- absolute_path_length_diff_threshold : length difference between asked and previous path is less than this
				- ratio_path_length_diff : if asked plan length is less than ratio*previous_path_length
		- dist_threshold_not_feasible : when blocked by not feasible, if human moved this distance far from position stopped, unblock
		- theta_threshold_not_feasible : same with angle
		- dist_stop_replan : if distance to goal is less than this => stop replan (SHOULD concider path length and not absolute distance !)

= move_human
	= placeRobotMap
		- size_rob : size of robot (one side, square)
		- dist_threshold : distance above which robot isn't drawn on costmap
	= teb
		- max vel x, y theta : should be able to modify but not stable ...
